/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Aval_20, Aval_20Interface } from "../../contracts/Aval_20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addItems",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "itemName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct aval_20.items[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "redeemToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "redeem_items",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "itemName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006006553480156200001657600080fd5b50604051620023f9380380620023f983398181016040528101906200003c9190620002a6565b828281600390816200004f91906200058b565b5080600490816200006191906200058b565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000672565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200011782620000cc565b810181811067ffffffffffffffff82111715620001395762000138620000dd565b5b80604052505050565b60006200014e620000ae565b90506200015c82826200010c565b919050565b600067ffffffffffffffff8211156200017f576200017e620000dd565b5b6200018a82620000cc565b9050602081019050919050565b60005b83811015620001b75780820151818401526020810190506200019a565b60008484015250505050565b6000620001da620001d48462000161565b62000142565b905082815260208101848484011115620001f957620001f8620000c7565b5b6200020684828562000197565b509392505050565b600082601f830112620002265762000225620000c2565b5b815162000238848260208601620001c3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200026e8262000241565b9050919050565b620002808162000261565b81146200028c57600080fd5b50565b600081519050620002a08162000275565b92915050565b600080600060608486031215620002c257620002c1620000b8565b5b600084015167ffffffffffffffff811115620002e357620002e2620000bd565b5b620002f1868287016200020e565b935050602084015167ffffffffffffffff811115620003155762000314620000bd565b5b62000323868287016200020e565b925050604062000336868287016200028f565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039357607f821691505b602082108103620003a957620003a86200034b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003d4565b6200041f8683620003d4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200046c62000466620004608462000437565b62000441565b62000437565b9050919050565b6000819050919050565b62000488836200044b565b620004a0620004978262000473565b848454620003e1565b825550505050565b600090565b620004b7620004a8565b620004c48184846200047d565b505050565b5b81811015620004ec57620004e0600082620004ad565b600181019050620004ca565b5050565b601f8211156200053b576200050581620003af565b6200051084620003c4565b8101602085101562000520578190505b620005386200052f85620003c4565b830182620004c9565b50505b505050565b600082821c905092915050565b6000620005606000198460080262000540565b1980831691505092915050565b60006200057b83836200054d565b9150826002028217905092915050565b620005968262000340565b67ffffffffffffffff811115620005b257620005b1620000dd565b5b620005be82546200037a565b620005cb828285620004f0565b600060209050601f831160018114620006035760008415620005ee578287015190505b620005fa85826200056d565b8655506200066a565b601f1984166200061386620003af565b60005b828110156200063d5784890151825560018201915060208501945060208101905062000616565b868310156200065d578489015162000659601f8916826200054d565b8355505b6001600288020188555050505b505050505050565b611d7780620006826000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063410d59cc116100ad5780638da5cb5b116100715780638da5cb5b146102f857806395d89b4114610316578063a9059cbb14610334578063dd62ed3e14610364578063f8b2cb4f1461039457610121565b8063410d59cc1461023e57806342966c681461025c57806343cdef601461027857806370a082311461029657806376b655f5146102c657610121565b806318160ddd116100f457806318160ddd146101ac57806323b872dd146101ca578063313ce567146101fa5780633ccfd60b1461021857806340c10f191461022257610121565b8063013054c21461012657806306fdde031461014257806307c4733a14610160578063095ea7b31461017c575b600080fd5b610140600480360381019061013b9190611268565b6103c4565b005b61014a610448565b6040516101579190611325565b60405180910390f35b61017a6004803603810190610175919061147c565b6104da565b005b61019660048036038101906101919190611536565b610602565b6040516101a39190611591565b60405180910390f35b6101b4610625565b6040516101c191906115bb565b60405180910390f35b6101e460048036038101906101df91906115d6565b61062f565b6040516101f19190611591565b60405180910390f35b61020261065e565b60405161020f9190611645565b60405180910390f35b610220610667565b005b61023c60048036038101906102379190611536565b610734565b005b6102466107d2565b60405161025391906117cb565b60405180910390f35b61027660048036038101906102719190611268565b6108d7565b005b6102806108e4565b60405161028d91906115bb565b60405180910390f35b6102b060048036038101906102ab91906117ed565b6108ea565b6040516102bd91906115bb565b60405180910390f35b6102e060048036038101906102db9190611268565b610932565b6040516102ef9392919061181a565b60405180910390f35b6103006109f4565b60405161030d9190611867565b60405180910390f35b61031e610a1a565b60405161032b9190611325565b60405180910390f35b61034e60048036038101906103499190611536565b610aac565b60405161035b9190611591565b60405180910390f35b61037e60048036038101906103799190611882565b610ac0565b60405161038b91906115bb565b60405180910390f35b6103ae60048036038101906103a991906117ed565b610b47565b6040516103bb91906115bb565b60405180910390f35b6000600782815481106103da576103d96118c2565b5b9060005260206000209060030201600201549050806103f833610b47565b1015610439576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104309061193d565b60405180910390fd5b6104433082610aac565b505050565b6060600380546104579061198c565b80601f01602080910402602001604051908101604052809291908181526020018280546104839061198c565b80156104d05780601f106104a5576101008083540402835291602001916104d0565b820191906000526020600020905b8154815290600101906020018083116104b357829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190611a09565b60405180910390fd5b60006040518060600160405280600654815260200184815260200183815250905060078190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816105d69190611bd5565b506040820151816002015550506001600660008282546105f69190611cd6565b92505081905550505050565b60008061060d610b59565b905061061a818585610b61565b600191505092915050565b6000600254905090565b60008061063a610b59565b9050610647858285610b73565b610652858585610c07565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90611a09565b60405180910390fd5b600061070230610b47565b905061073130600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610c07565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90611a09565b60405180910390fd5b6107ce8282610cfb565b5050565b60606007805480602002602001604051908101604052809291908181526020016000905b828210156108ce5783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546108339061198c565b80601f016020809104026020016040519081016040528092919081815260200182805461085f9061198c565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b50505050508152602001600282015481525050815260200190600101906107f6565b50505050905090565b6108e13382610d7d565b50565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6007818154811061094257600080fd5b906000526020600020906003020160009150905080600001549080600101805461096b9061198c565b80601f01602080910402602001604051908101604052809291908181526020018280546109979061198c565b80156109e45780601f106109b9576101008083540402835291602001916109e4565b820191906000526020600020905b8154815290600101906020018083116109c757829003601f168201915b5050505050908060020154905083565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054610a299061198c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a559061198c565b8015610aa25780601f10610a7757610100808354040283529160200191610aa2565b820191906000526020600020905b815481529060010190602001808311610a8557829003601f168201915b5050505050905090565b6000610ab88383610dff565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610b52826108ea565b9050919050565b600033905090565b610b6e8383836001610e22565b505050565b6000610b7f8484610ac0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c015781811015610bf1578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610be893929190611d0a565b60405180910390fd5b610c0084848484036000610e22565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c795760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c709190611867565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ce29190611867565b60405180910390fd5b610cf6838383610ff9565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d6d5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d649190611867565b60405180910390fd5b610d7960008383610ff9565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610def5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610de69190611867565b60405180910390fd5b610dfb82600083610ff9565b5050565b600080610e0a610b59565b9050610e17818585610c07565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e945760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e8b9190611867565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f065760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610efd9190611867565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610ff3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fea91906115bb565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361104b57806002600082825461103f9190611cd6565b9250508190555061111e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110d7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ce93929190611d0a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361116757806002600082825403925050819055506111b4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161121191906115bb565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61124581611232565b811461125057600080fd5b50565b6000813590506112628161123c565b92915050565b60006020828403121561127e5761127d611228565b5b600061128c84828501611253565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112cf5780820151818401526020810190506112b4565b60008484015250505050565b6000601f19601f8301169050919050565b60006112f782611295565b61130181856112a0565b93506113118185602086016112b1565b61131a816112db565b840191505092915050565b6000602082019050818103600083015261133f81846112ec565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611389826112db565b810181811067ffffffffffffffff821117156113a8576113a7611351565b5b80604052505050565b60006113bb61121e565b90506113c78282611380565b919050565b600067ffffffffffffffff8211156113e7576113e6611351565b5b6113f0826112db565b9050602081019050919050565b82818337600083830152505050565b600061141f61141a846113cc565b6113b1565b90508281526020810184848401111561143b5761143a61134c565b5b6114468482856113fd565b509392505050565b600082601f83011261146357611462611347565b5b813561147384826020860161140c565b91505092915050565b6000806040838503121561149357611492611228565b5b600083013567ffffffffffffffff8111156114b1576114b061122d565b5b6114bd8582860161144e565b92505060206114ce85828601611253565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611503826114d8565b9050919050565b611513816114f8565b811461151e57600080fd5b50565b6000813590506115308161150a565b92915050565b6000806040838503121561154d5761154c611228565b5b600061155b85828601611521565b925050602061156c85828601611253565b9150509250929050565b60008115159050919050565b61158b81611576565b82525050565b60006020820190506115a66000830184611582565b92915050565b6115b581611232565b82525050565b60006020820190506115d060008301846115ac565b92915050565b6000806000606084860312156115ef576115ee611228565b5b60006115fd86828701611521565b935050602061160e86828701611521565b925050604061161f86828701611253565b9150509250925092565b600060ff82169050919050565b61163f81611629565b82525050565b600060208201905061165a6000830184611636565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61169581611232565b82525050565b600082825260208201905092915050565b60006116b782611295565b6116c1818561169b565b93506116d18185602086016112b1565b6116da816112db565b840191505092915050565b60006060830160008301516116fd600086018261168c565b506020830151848203602086015261171582826116ac565b915050604083015161172a604086018261168c565b508091505092915050565b600061174183836116e5565b905092915050565b6000602082019050919050565b600061176182611660565b61176b818561166b565b93508360208202850161177d8561167c565b8060005b858110156117b9578484038952815161179a8582611735565b94506117a583611749565b925060208a01995050600181019050611781565b50829750879550505050505092915050565b600060208201905081810360008301526117e58184611756565b905092915050565b60006020828403121561180357611802611228565b5b600061181184828501611521565b91505092915050565b600060608201905061182f60008301866115ac565b818103602083015261184181856112ec565b905061185060408301846115ac565b949350505050565b611861816114f8565b82525050565b600060208201905061187c6000830184611858565b92915050565b6000806040838503121561189957611898611228565b5b60006118a785828601611521565b92505060206118b885828601611521565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f7520646f6e2774206861766520656e6f75676820546f6b656e7300000000600082015250565b6000611927601c836112a0565b9150611932826118f1565b602082019050919050565b600060208201905081810360008301526119568161191a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119a457607f821691505b6020821081036119b7576119b661195d565b5b50919050565b7f596f7520617265206e6f7420746865204f776e65720000000000000000000000600082015250565b60006119f36015836112a0565b91506119fe826119bd565b602082019050919050565b60006020820190508181036000830152611a22816119e6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a8b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a4e565b611a958683611a4e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611ad2611acd611ac884611232565b611aad565b611232565b9050919050565b6000819050919050565b611aec83611ab7565b611b00611af882611ad9565b848454611a5b565b825550505050565b600090565b611b15611b08565b611b20818484611ae3565b505050565b5b81811015611b4457611b39600082611b0d565b600181019050611b26565b5050565b601f821115611b8957611b5a81611a29565b611b6384611a3e565b81016020851015611b72578190505b611b86611b7e85611a3e565b830182611b25565b50505b505050565b600082821c905092915050565b6000611bac60001984600802611b8e565b1980831691505092915050565b6000611bc58383611b9b565b9150826002028217905092915050565b611bde82611295565b67ffffffffffffffff811115611bf757611bf6611351565b5b611c01825461198c565b611c0c828285611b48565b600060209050601f831160018114611c3f5760008415611c2d578287015190505b611c378582611bb9565b865550611c9f565b601f198416611c4d86611a29565b60005b82811015611c7557848901518255600182019150602085019450602081019050611c50565b86831015611c925784890151611c8e601f891682611b9b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ce182611232565b9150611cec83611232565b9250828201905080821115611d0457611d03611ca7565b5b92915050565b6000606082019050611d1f6000830186611858565b611d2c60208301856115ac565b611d3960408301846115ac565b94935050505056fea26469706673582212208fe28253e9dd448b4574fbabcf1adf4ea41ec84bfbd26b485b4df53770d5c13864736f6c63430008150033";

type Aval_20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Aval_20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Aval_20__factory extends ContractFactory {
  constructor(...args: Aval_20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, _owner, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _owner, overrides || {}) as Promise<
      Aval_20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Aval_20__factory {
    return super.connect(runner) as Aval_20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Aval_20Interface {
    return new Interface(_abi) as Aval_20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): Aval_20 {
    return new Contract(address, _abi, runner) as unknown as Aval_20;
  }
}
